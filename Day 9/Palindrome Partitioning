https://leetcode.com/problems/palindrome-partitioning/

void helper(string s,vector<vector<string>>&ans,vector<string>&ds,int idx)
    {
        if(idx==s.size())
        {
            ans.push_back(ds);
            return;
        }
        for(int i=idx;i<s.size();i++)
        {
           if(ispalindrome(s,i,idx)) 
           {
               ds.push_back(s.substr(idx,i-idx+1));
               helper(s,ans,ds,i+1);
               ds.pop_back();
           }
        }
    }
    bool ispalindrome(string s,int i,int idx)
    {
        while(idx<=i)
        {
            if(s[idx]!=s[i])
                return false;
            i--;
            idx++;
        }
        return true;
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>>ans;
        vector<string>ds;
        helper(s,ans,ds,0);
        return ans;
    }
