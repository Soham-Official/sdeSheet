https://leetcode.com/problems/implement-queue-using-stacks/


stack<int>s1;
    stack<int>s2;
    /** Push element x to the back of queue. */
    void push(int x) {
        s1.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    int pop() {
        if(!s2.empty()){
            int top1=s2.top();
            s2.pop();
            return top1;
        }
        else{
            while(!s1.empty())
        {
            s2.push(s1.top());
            s1.pop();
        }
            int x=s2.top();
         s2.pop();
            return x;
        }
            
    }
    
    /** Get the front element. */
    int peek() {
        if(s2.empty())
        {
            while(!s1.empty())
        {
            s2.push(s1.top());
            s1.pop();
        }
        }
        return s2.top();
        
        
    }
    
    /** Returns whether the queue is empty. */
    bool empty() {
        return s1.empty() && s2.empty();
    }
