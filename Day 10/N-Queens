https://leetcode.com/problems/n-queens/


bool isSafe(int row,int col,vector<string>&v,int n)
    {
        int i=row,j=col;
        while(i>=0 and j>=0)
        {
            if(v[i][j] == 'Q')
                return false;
            i--;
            j--;
        }
        i=row,j=col;
        while(j>=0)
        {
            if(v[i][j] == 'Q')
                return false;
            j--;
        }
        i=row,j=col;
        while(i<n and j>=0)
        {
            if(v[i][j] == 'Q')
                return false;
            i++;
            j--;
        }
        return true;
    }
    void solve(int col,vector<string>&v,vector<vector<string>>&ans,int n)
    {
        if(col==n)
        {
            ans.push_back(v);
             return ;
        }
        for(int row=0;row<n;row++)
        {
            if(isSafe(row,col,v,n))
            {
                v[row][col]='Q';
                solve(col+1,v,ans,n);
                v[row][col]='.';
            }
        }
            
    }
    vector<vector<string>> solveNQueens(int n) {
        vector<vector<string>>ans;
        vector<string>v(n);
        string s(n,'.');
        for(int i=0;i<n;i++)
            v[i]=s;
        solve(0,v,ans,n);
        return ans;
    }
