https://leetcode.com/problems/3sum/


vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>ans;
        sort(nums.begin(),nums.end());
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            int left=i+1;
            int right=n-1;
            while(left<right)
            {
                if(nums[i]+nums[left]+nums[right]==0)
                {
                    vector<int>v;
                    v.push_back(nums[i]);
                    v.push_back(nums[left]);
                    v.push_back(nums[right]);
                    ans.push_back(v);
                    while(left<n and v[1]==nums[left]  )left++;
                    while(right>=0 and v[2]==nums[right]  )right--;
                }
                else if(nums[i]+nums[left]+nums[right]>0)
                    right--;
                else
                    left++; 
            }
            while(i<n-1 and nums[i+1]==nums[i]) i++;
        }
        return ans;
    }
