 https://practice.geeksforgeeks.org/problems/inversion-of-array-1587115620/1
 
 long long int merge(long long int arr[],long long int temp[],long long int  low,long long int mid,long long int high) 
    {
        long long int i=low;
        long long int j=mid+1;
        long long int count=0;
        long long int k=low;
        vector<pair<int,int>>vv;
        while(i<=mid and j<=high)
        {
            if(arr[i]<=arr[j])
            temp[k++]=arr[i++];
            else
            {
                count+=mid-i+1;
                
                temp[k++]=arr[j++];
            }
        }
        while(i<=mid)
        temp[k++]=arr[i++];
        while(j<=high)
        temp[k++]=arr[j++];
        for(int i=low;i<=high;i++)
        arr[i]=temp[i];
        return count;
    }
    long long int mergesort(long long int arr[],long long int temp[],long long int  low,long long int high)
    {
        long long int count=0;
        if(low<high)
        {
            long long int mid=(low+high)/2;
            count+=mergesort(arr,temp,low,mid);
            count+=mergesort(arr,temp,mid+1,high);
            count+=merge(arr,temp,low,mid,high);
        }
        return count;
    }
    long long int inversionCount(long long arr[], long long n)
    {
        long long int low=0;
        long long int high=n-1;
        long long int temp[n];
        return mergesort(arr,temp,low,high);
    }
