https://leetcode.com/problems/reverse-pairs/


int merge(vector<int>& nums,int low,int mid,int high)
    {
        int i=low;
        int j=mid+1;
        int cnt=0;
        for(int k=low;k<=mid;k++)
        {
            while(j<=high and nums[k]>2LL*nums[j])
                j++;
            cnt+=j-(mid+1);
        }
        vector<int> tmp;
        j=mid+1;
        while(i<=mid and j<=high)
        {
            if(nums[i]<=nums[j])
                tmp.push_back(nums[i++]);
            else
                tmp.push_back(nums[j++]);
        }
        while(i<=mid)
            tmp.push_back(nums[i++]);
        while(j<=high)
            tmp.push_back(nums[j++]);
        for(int i=low;i<=high;i++)
            nums[i]=tmp[i-low];
        return cnt;
        
    }
    int mergeSort(vector<int>& nums,int low,int high)
    {
        int count=0;
        if(low<high)
        {
            int mid=(low+high)/2;
            count+=mergeSort(nums,low,mid);
            count+=mergeSort(nums,mid+1,high);
            count+=merge(nums,low,mid,high);
        }
        return count;
    }
    int reversePairs(vector<int>& nums) {
         int low=0;
         int high=nums.size()-1;
         return mergeSort(nums,low,high);
    }
